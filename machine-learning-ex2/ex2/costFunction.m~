function [j, grad] = costFunction(theta, X, y)
%COSTFUNCTION Compute cost and gradient for logistic regression
%   J = COSTFUNCTION(theta, X, y) computes the cost of using theta as the
%   parameter for logistic regression and the gradient of the cost
%   w.r.t. to the parameters.

% % Initialize some useful values
 m = length(y); % number of training examples
% % You need to return the following variables correctly 
J = 0;
grad = zeros(size(theta));
% 
% % ====================== YOUR CODE HERE ======================
% % Instructions: Compute the cost of a particular choice of theta.
% %               You should set J to the cost.
% %               Compute the partial derivatives and set grad to the partial
% %               derivatives of the cost w.r.t. each parameter in theta
% %
% % Note: grad should have the same dimensions as theta
% %
% 
% t = 0;
%  
% for i = 1:m 
%     h = 0;
%     for x = 1:size(X,2)
%         h = theta(x,1) * X(i,x) + h;
%     end
%     h = sigmoid(h); 
%     t = (-y(i,1)*log(h) - (1- y(i,1))* log(1-h)) + t; 
% end 
% J = t/m; 
% 
 h = sigmoid(X*theta); 
 
 J = (-1/m)* sum(y.*log(h) + (1-y).*log(1-h)); 
 %(-1/m) * sum( y .* log(h) + (1 - y) .* log(1 -h) );


 for j = 1:m
     grad = grad + ( h(j) - y(j) ) * X(j, :)'; 
 end
  grad = grad/m; 
  
end
